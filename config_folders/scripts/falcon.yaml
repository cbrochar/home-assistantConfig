######################################################################
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
# Youtube Video description of how I use this script
# https://www.vcloudinfo.com/2018/10/easy-smart-home-gadgets-i-use-for-my.html
######################################################################

######################################################################
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/start	Starts the playlist (optional payload can be index of item to start with)
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/next	Forces playing of the next item in the playlist (payload ignored)
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/prev	Forces playing of the previous item in the playlist (payload ignored)
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/repeat	If payload is "1", will turn on repeat, otherwise it is turned off
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/sectionPosition	Payload contains an integer for the position in the playlist (0 based)
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/stop/now	Forces the playlist to stop immediately. PLAYLISTNAME can be ALLPLAYLISTS.
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/stop/graceful	Gracefully stop playlist. PLAYLISTNAME can be ALLPLAYLISTS.
# Kulp/falcon/player/KulpController/set/playlist/${PLAYLISTNAME}/stop/afterloop	Allow playlist to finish current loop then stop. PLAYLISTNAME can be ALLPLAYLISTS.
# Kulp/falcon/player/KulpController/event/	Starts the event identified by the payload. The payload format is MAJ_MIN identifying the event.
# Kulp/falcon/player/KulpController/effect/start	Starts the effect named in the payload
# Kulp/falcon/player/KulpController/effect/stop	Stops the effect named in the payload or all effects if payload is empty
# Kulp/falcon/player/KulpController/light/${MODELNAME}/cmd
# Kulp/falcon/player/KulpController/light/${MODELNAME}/state	Control a Pixel Overlay Model via Home Assistant's MQTT Light interface. The Pixel Overlay Model is treated as a RGB light.
######################################################################

monthly_color_scene:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/playlist/name/set
        payload: >
          monthly_
          {%- if states.sensor.flag.state == "True" -%}
          RWB
          {%- elif now().strftime("%m%d")|int == 101 -%}
          new_years_day
          {%- elif now().strftime("%m%d")|int >= 210
          and now().strftime("%m%d")|int <= 214-%}
          valentine
          {%- elif now().strftime("%m%d")|int == 228 -%}
          marti_gras
          {%- elif now().strftime("%m%d")|int == 314 -%}
          pi
          {%- elif now().strftime("%m%d")|int >= 315
          and now().strftime("%m%d")|int <= 317-%}
          st_patty
          {%- elif now().strftime("%m%d")|int >= 328
          and now().strftime("%m%d")|int <= 401-%}
          easter
          {%- elif now().strftime("%m%d")|int == 422 -%}
          st_patty
          {%- elif now().strftime("%m%d")|int == 504 -%}
          starwars
          {%- elif now().strftime("%m%d")|int == 505 -%}
          cinco_de_mayo
          {%- elif now().strftime("%m%d")|int >= 1001
          and now().strftime("%m%d")|int <= 1031-%}
          halloween
          {%- elif now().strftime("%m%d")|int >= 1122
          and now().strftime("%m%d")|int <= 1123-%}
          thanksgiving
          {%- elif now().strftime("%m%d")|int >= 1201
          and now().strftime("%m%d")|int <= 1230-%}
          christmas
          {%- elif now().strftime("%m%d")|int == 1231 -%}
          new_years_day
          {%- else -%}
          standard
          {%- endif -%}_colors
    - delay:
        seconds: 5
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/playlist/repeat/set
        payload: '1'
        retain: false

monthly_color_off:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/playlist/name/set
        payload: 'all_off'
        retain: false
    - delay:
        seconds: 5
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/playlist/repeat/set
        payload: '0'
        retain: false

###################################
###       FALCON PLAYER  script       ###
###################################
falconplayer_start_playlist:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/ {{ states('input_select.playlists') }}/start
        payload: '1'
        retain: false
falconplayer_next_seq:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/next
        retain: false
falconplayer_prev_seq:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/prev
        retain: false  
falconplayer_repeat:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/repeat
        payload: '1'
        retain: false 
falconplayer_repeat_off:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/repeat
        payload: '0'
        retain: false                 
falconplayer_section_position:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/sectionPosition
        payload: '0'
        retain: false            
falconplayer_stop_now:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/stop/now
        #payload: 'all_off'
        payload: 'ALLPLAYLISTS'
        retain: false
falconplayer_stop_graceful:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/stop/graceful
        #payload: 'all_off'
        payload: 'ALLPLAYLISTS'
        retain: false
falconplayer_stop_afterloop:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: Kulp/falcon/player/KulpController/set/playlist/{{ states('input_select.playlists') }}/stop/afterloop
        #payload: 'all_off'
        payload: 'ALLPLAYLISTS'
        retain: false
###################################
###       FALCON PLAYER         ###
###################################