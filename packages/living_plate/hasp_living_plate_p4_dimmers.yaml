##############################################################################
# Automations to configure slider controls on page 4 as light dimmers
automation:
  - alias: hasp_living_plate_p4_DimmersInit
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/p[4].b[4].txt"
          payload: '"Light 1"'
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/p[4].b[5].txt"
          payload: '"Light 2"'
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/p[4].b[6].txt"
          payload: '"Light 3"'

  # when the user moves the slider, change the light in Hass
  - alias: hasp_living_plate_p4_Dimmer7UpdateHass
    trigger:
      - platform: mqtt
        topic: "hasp/living_plate/state/p[4].b[7].val"
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.light_1
          brightness: "{{ trigger.payload }}"

  # When the light is changed in Hass, update HASP to move the dimmer
  - alias: hasp_living_plate_p4_Dimmer7UpdateHASP
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: light.light_1
    action:
      - service: mqtt.publish
        data_template:
          topic: "hasp/living_plate/command/p[4].b[7].val"
          payload_template: "{{states.light.light_1.attributes.brightness|default(0)|int}}"

  # when the user moves the slider, change the light in Hass
  - alias: hasp_living_plate_p4_Dimmer8UpdateHass
    trigger:
      - platform: mqtt
        topic: "hasp/living_plate/state/p[4].b[8].val"
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.light_2
          brightness: "{{ trigger.payload }}"

  # When the light is changed in Hass, update HASP to move the dimmer
  - alias: hasp_living_plate_p4_Dimmer8UpdateHASP
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: light.light_2
    action:
      - service: mqtt.publish
        data_template:
          topic: "hasp/living_plate/command/p[4].b[8].val"
          payload_template: "{{states.light.light_2.attributes.brightness|default(0)|int}}"

  # when the user moves the slider, change the light in Hass
  - alias: hasp_living_plate_p4_Dimmer9UpdateHass
    trigger:
      - platform: mqtt
        topic: "hasp/living_plate/state/p[4].b[9].val"
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.light_3
          brightness: "{{ trigger.payload }}"

  # When the light is changed in Hass, update HASP to move the dimmer
  - alias: hasp_living_plate_p4_Dimmer9UpdateHASP
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: light.light_3
    action:
      - service: mqtt.publish
        data_template:
          topic: "hasp/living_plate/command/p[4].b[9].val"
          payload_template: "{{states.light.light_3.attributes.brightness|default(0)|int}}"

##############################################################################
# Automations to set colors on HASP Page 4
#
# Here we've swapped selected/unselected as these buttons will always be
# unselected (unless actively being pressed), and sliders do not have a
# selected/unselected state.
  - alias: hasp_living_plate_p4_ColorConfig_selectedforegroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_living_plate_selectedforegroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/json"
          payload_template: >-
            [{%- for i in range(4,7) -%}"p[4].b[{{i}}].pco={{ states('input_number.hasp_living_plate_selectedforegroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_living_plate_p4_ColorConfig_selectedbackgroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_living_plate_selectedbackgroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/json"
          payload_template: >-
            [{%- for i in range(4,7) -%}"p[4].b[{{i}}].bco={{ states('input_number.hasp_living_plate_selectedbackgroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_living_plate_p4_ColorConfig_unselectedforegroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_living_plate_unselectedforegroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/json"
          payload_template: >-
            [{%- for i in range(4,7) -%}"p[4].b[{{i}}].pco2={{ states('input_number.hasp_living_plate_unselectedforegroundcolor')|int }}",{%- endfor -%}
            {%- for i in range(7,10) -%}"p[4].b[{{i}}].pco={{ states('input_number.hasp_living_plate_unselectedforegroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_living_plate_p4_ColorConfig_unselectedbackgroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.living_plate_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_living_plate_unselectedbackgroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/living_plate/command/json"
          payload_template: >-
            [{%- for i in range(4,7) -%}"p[4].b[{{i}}].bco2={{ states('input_number.hasp_living_plate_unselectedbackgroundcolor')|int }}",{%- endfor -%}
            {%- for i in range(7,10) -%}"p[4].b[{{i}}].bco={{ states('input_number.hasp_living_plate_unselectedbackgroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]
